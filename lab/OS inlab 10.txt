Task :
#include  <stdio.h> 
#include  <pthread.h> 
#include  <semaphore.h> 
#include  <string.h> 
#include  <fcntl.h> 
#include  <st dlib.h> 
#include  <unistd.h> 
#include  <sys/stat.h> 
#include  <sys/mman.h> 
#include  <time.h> 
#include  <stdbool.h> 
sem_t  mutex; 
int  count  =  0; 
int  size  =  0; 
char*  subString; 
void*  firstHalf(void*  arg) { 
sem_wait(&mutex); 
char*  content  =  arg; 
for  (int  i { =0  ;  i<size/2  ;  i++) 
if  (content[i]  ==  subString[0])  //Finding  if  there  is first  character  of  the  substring   
 {    
 bool badMatch = false;    
 int k = i;    
 for (int j=0 ; j<strlen(subString)-1 && k<size; j++)    {     
 if (content[k] != subString[j]) //If any character does not match sub-string is not found     
 {      
 badMatch = true;     
 }     
 k++;     
 }    
 if (!badMatch)     
 count++;   }  
 }
    
  sem_post(&mutex); 
  }  
  void* secondHalf(void* arg) {  
  sem_wait(&mutex);  
  char* content = arg;    
  for (int i=size/2 ; i<size-1 ; i++)  {   
  if (content[i] == subString[0]) //Finding if there is first character of the sub-string   {    
  bool badMatch = false;    
  int k = i;    
  for (int j=0 ; j<strlen(subString)-1 && k<size; j++) //If any character does not match sub-string is not found    {     
  if (content[k] != subString[j])     {      
  badMatch = true;     
  }     
  k++;     
  }    
  if (!badMatch)     
  count++;   
  }  
  }  
  sem_post(&mutex); 
  }  
  int main(int argc, char*argv[]) {  
  sem_init(&mutex, 0, 1);    
  pthread_t t1,t2;   
  int fd;  
  char* data;    
  if((fd = open(argv[1],O_RDONLY)) == -1)  {   
  perror("open");   
  exit(1);  
  }    
  data = mmap(NULL, getpagesize(), PROT_READ,MAP_SHARED, fd,0);    
  size = strlen(data);  //Calculating the size of data in the file  
  subString  = argv[2]; //Getting the sub-string to be found   
  pthread_create(&t1,NULL,firstHalf,data);  
  pthread_create(&t2,NULL,secondHalf,data);    
  pthread_join(t1,NULL);  
  pthread_join(t2,NULL);   
  sem_destroy(&mutex);    
  printf("Count of \"%s\" = %d\n",subString,count);    
  return 0; }
